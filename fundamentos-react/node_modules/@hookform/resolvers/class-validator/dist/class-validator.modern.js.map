{"version":3,"file":"class-validator.modern.js","sources":["../src/class-validator.ts"],"sourcesContent":["import { FieldErrors } from 'react-hook-form';\nimport { toNestError } from '@hookform/resolvers';\nimport { plainToClass } from 'class-transformer';\nimport { validate, validateSync, ValidationError } from 'class-validator';\nimport type { Resolver } from './types';\n\nconst parseErrors = (\n  errors: ValidationError[],\n  validateAllFieldCriteria: boolean,\n  parsedErrors: FieldErrors = {},\n  path = '',\n) => {\n  return errors.reduce((acc, error) => {\n    const _path = path ? `${path}.${error.property}` : error.property;\n\n    if (error.constraints) {\n      const key = Object.keys(error.constraints)[0];\n      acc[_path] = {\n        type: key,\n        message: error.constraints[key],\n      };\n\n      if (validateAllFieldCriteria && acc[_path]) {\n        Object.assign(acc[_path], { types: error.constraints });\n      }\n    }\n\n    if (error.children && error.children.length) {\n      parseErrors(error.children, validateAllFieldCriteria, acc, _path);\n    }\n\n    return acc;\n  }, parsedErrors);\n};\n\nexport const classValidatorResolver: Resolver =\n  (schema, schemaOptions = {}, resolverOptions = {}) =>\n  async (values, _, options) => {\n    const user = plainToClass(schema, values);\n\n    const rawErrors = await (resolverOptions.mode === 'sync'\n      ? validateSync\n      : validate)(user, schemaOptions);\n\n    return rawErrors.length\n      ? {\n          values: {},\n          errors: toNestError(\n            parseErrors(rawErrors, options.criteriaMode === 'all'),\n            options.fields,\n          ),\n        }\n      : { values, errors: {} };\n  };\n"],"names":["parseErrors","errors","validateAllFieldCriteria","parsedErrors","path","reduce","acc","error","_path","property","constraints","key","Object","keys","type","message","assign","types","children","length","classValidatorResolver","schema","schemaOptions","resolverOptions","async","values","_","options","user","plainToClass","rawErrors","mode","validateSync","validate","toNestError","criteriaMode","fields"],"mappings":"gKAMA,MAAMA,EAAc,CAClBC,EACAC,EACAC,EAA4B,GAC5BC,EAAO,KAEAH,EAAOI,OAAO,CAACC,EAAKC,KACzB,MAAMC,EAAQJ,KAAUA,KAAQG,EAAME,WAAaF,EAAME,SAEzD,GAAIF,EAAMG,YAAa,CACrB,MAAMC,EAAMC,OAAOC,KAAKN,EAAMG,aAAa,GAC3CJ,EAAIE,GAAS,CACXM,KAAMH,EACNI,QAASR,EAAMG,YAAYC,IAGzBT,GAA4BI,EAAIE,IAClCI,OAAOI,OAAOV,EAAIE,GAAQ,CAAES,MAAOV,EAAMG,cAQ7C,OAJIH,EAAMW,UAAYX,EAAMW,SAASC,QACnCnB,EAAYO,EAAMW,SAAUhB,EAA0BI,EAAKE,GAGtDF,GACNH,GAGQiB,EACX,CAACC,EAAQC,EAAgB,GAAIC,EAAkB,KAC/CC,MAAOC,EAAQC,EAAGC,KAChB,MAAMC,EAAOC,EAAaR,EAAQI,GAE5BK,QAA4C,SAAzBP,EAAgBQ,KACrCC,EACAC,GAAUL,EAAMN,GAEpB,OAAOQ,EAAUX,OACb,CACEM,OAAQ,GACRxB,OAAQiC,EACNlC,EAAY8B,EAAoC,QAAzBH,EAAQQ,cAC/BR,EAAQS,SAGZ,CAAEX,OAAAA,EAAQxB,OAAQ"}