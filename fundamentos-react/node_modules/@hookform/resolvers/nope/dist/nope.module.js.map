{"version":3,"file":"nope.module.js","sources":["../src/nope.ts"],"sourcesContent":["import type { FieldErrors } from 'react-hook-form';\nimport { toNestError } from '@hookform/resolvers';\nimport type { ShapeErrors } from 'nope-validator/lib/cjs/types';\nimport type { Resolver } from './types';\n\nconst parseErrors = (\n  errors: ShapeErrors,\n  parsedErrors: FieldErrors = {},\n  path = '',\n) => {\n  return Object.keys(errors).reduce((acc, key) => {\n    const _path = path ? `${path}.${key}` : key;\n    const error = errors[key];\n\n    if (typeof error === 'string') {\n      acc[_path] = {\n        message: error,\n      };\n    } else {\n      parseErrors(error, acc, _path);\n    }\n\n    return acc;\n  }, parsedErrors);\n};\n\nexport const nopeResolver: Resolver =\n  (\n    schema,\n    schemaOptions = {\n      abortEarly: false,\n    },\n  ) =>\n  (values, context, options) => {\n    const result = schema.validate(values, context, schemaOptions) as\n      | ShapeErrors\n      | undefined;\n\n    return result\n      ? { values: {}, errors: toNestError(parseErrors(result), options.fields) }\n      : { values, errors: {} };\n  };\n"],"names":["parseErrors","errors","parsedErrors","path","Object","keys","reduce","acc","key","_path","error","message","nopeResolver","schema","schemaOptions","abortEarly","values","context","options","result","validate","toNestError","fields"],"mappings":"kDAKA,IAAMA,EAAc,SAAdA,EACJC,EACAC,EACAC,GAEA,gBAHAD,IAAAA,EAA4B,aAC5BC,IAAAA,EAAO,IAEAC,OAAOC,KAAKJ,GAAQK,OAAO,SAACC,EAAKC,GACtC,IAAMC,EAAQN,EAAUA,MAAQK,EAAQA,EAClCE,EAAQT,EAAOO,GAUrB,MARqB,iBAAVE,EACTH,EAAIE,GAAS,CACXE,QAASD,GAGXV,EAAYU,EAAOH,EAAKE,GAGnBF,GACNL,IAGQU,EACX,SACEC,EACAC,mBAAAA,IAAAA,EAAgB,CACdC,YAAY,aAGfC,EAAQC,EAASC,GAChB,IAAMC,EAASN,EAAOO,SAASJ,EAAQC,EAASH,GAIhD,OAAOK,EACH,CAAEH,OAAQ,GAAIf,OAAQoB,EAAYrB,EAAYmB,GAASD,EAAQI,SAC/D,CAAEN,OAAAA,EAAQf,OAAQ"}