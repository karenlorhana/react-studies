!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@hookform/resolvers"),require("react-hook-form")):"function"==typeof define&&define.amd?define(["exports","@hookform/resolvers","react-hook-form"],o):o((e||self).hookformResolversYup={},e.hookformResolvers,e.reactHookForm)}(this,function(e,o,r){e.yupResolver=function(e,t,n){return void 0===t&&(t={}),void 0===n&&(n={}),function(s,a,i){try{return Promise.resolve(function(o,r){try{var i=(t.context&&"development"===process.env.NODE_ENV&&console.warn("You should not used the yup options context. Please, use the 'useForm' context object instead"),Promise.resolve(e["sync"===n.mode?"validateSync":"validate"](s,Object.assign({abortEarly:!1},t,{context:a}))).then(function(e){return{values:e,errors:{}}}))}catch(e){return r(e)}return i&&i.then?i.then(void 0,r):i}(0,function(e){return{values:{},errors:o.toNestError((t=e,n="all"===i.criteriaMode,t.inner.reduce(function(e,o){if(e[o.path]||(e[o.path]={message:o.message,type:o.type}),n){var t=e[o.path].types,s=t&&t[o.type];e[o.path]=r.appendErrors(o.path,n,e,o.type,s?[].concat(s,o.message):o.message)}return e},{})),i.fields)};var t,n}))}catch(e){return Promise.reject(e)}}}});
//# sourceMappingURL=yup.umd.js.map
