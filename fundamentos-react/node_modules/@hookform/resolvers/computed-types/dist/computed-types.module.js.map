{"version":3,"file":"computed-types.module.js","sources":["../src/computed-types.ts"],"sourcesContent":["import type { FieldErrors } from 'react-hook-form';\nimport { toNestError } from '@hookform/resolvers';\nimport type { ValidationError } from 'computed-types';\nimport type { Resolver } from './types';\n\nconst parseErrorSchema = (\n  computedTypesError: ValidationError,\n  parsedErrors: FieldErrors = {},\n  path = '',\n) => {\n  return (computedTypesError.errors || []).reduce((acc, error) => {\n    const _currentPath = String(error.path[0]);\n    const _path = path ? `${path}.${_currentPath}` : _currentPath;\n\n    acc[_path] = {\n      type: error.error.name,\n      message: error.error.message,\n    };\n\n    parseErrorSchema(error.error, acc, _path);\n\n    return acc;\n  }, parsedErrors);\n};\n\nexport const computedTypesResolver: Resolver =\n  (schema) => async (values, _, options) => {\n    try {\n      return {\n        errors: {},\n        values: await schema(values),\n      };\n    } catch (error) {\n      return {\n        values: {},\n        errors: toNestError(parseErrorSchema(error), options.fields),\n      };\n    }\n  };\n"],"names":["parseErrorSchema","computedTypesError","parsedErrors","path","errors","reduce","acc","error","_currentPath","String","_path","type","name","message","computedTypesResolver","schema","values","_","options","toNestError","fields"],"mappings":"kDAKA,IAAMA,EAAmB,SAAnBA,EACJC,EACAC,EACAC,GAEA,gBAHAD,IAAAA,EAA4B,aAC5BC,IAAAA,EAAO,KAECF,EAAmBG,QAAU,IAAIC,OAAO,SAACC,EAAKC,GACpD,IAAMC,EAAeC,OAAOF,EAAMJ,KAAK,IACjCO,EAAQP,EAAUA,MAAQK,EAAiBA,EASjD,OAPAF,EAAII,GAAS,CACXC,KAAMJ,EAAMA,MAAMK,KAClBC,QAASN,EAAMA,MAAMM,SAGvBb,EAAiBO,EAAMA,MAAOD,EAAKI,GAE5BJ,GACNJ,IAGQY,EACX,SAACC,mBAAkBC,EAAQC,EAAGC,sEAIVH,EAAOC,qBAFvB,MAAO,CACLZ,OAAQ,GACRY,iFAEKT,GACP,MAAO,CACLS,OAAQ,GACRZ,OAAQe,EAAYnB,EAAiBO,GAAQW,EAAQE,YAT3D"}