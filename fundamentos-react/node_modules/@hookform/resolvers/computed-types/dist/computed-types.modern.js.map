{"version":3,"file":"computed-types.modern.js","sources":["../src/computed-types.ts"],"sourcesContent":["import type { FieldErrors } from 'react-hook-form';\nimport { toNestError } from '@hookform/resolvers';\nimport type { ValidationError } from 'computed-types';\nimport type { Resolver } from './types';\n\nconst parseErrorSchema = (\n  computedTypesError: ValidationError,\n  parsedErrors: FieldErrors = {},\n  path = '',\n) => {\n  return (computedTypesError.errors || []).reduce((acc, error) => {\n    const _currentPath = String(error.path[0]);\n    const _path = path ? `${path}.${_currentPath}` : _currentPath;\n\n    acc[_path] = {\n      type: error.error.name,\n      message: error.error.message,\n    };\n\n    parseErrorSchema(error.error, acc, _path);\n\n    return acc;\n  }, parsedErrors);\n};\n\nexport const computedTypesResolver: Resolver =\n  (schema) => async (values, _, options) => {\n    try {\n      return {\n        errors: {},\n        values: await schema(values),\n      };\n    } catch (error) {\n      return {\n        values: {},\n        errors: toNestError(parseErrorSchema(error), options.fields),\n      };\n    }\n  };\n"],"names":["parseErrorSchema","computedTypesError","parsedErrors","path","errors","reduce","acc","error","_currentPath","String","_path","type","name","message","computedTypesResolver","schema","async","values","_","options","toNestError","fields"],"mappings":"kDAKA,MAAMA,EAAmB,CACvBC,EACAC,EAA4B,GAC5BC,EAAO,MAECF,EAAmBG,QAAU,IAAIC,OAAO,CAACC,EAAKC,KACpD,MAAMC,EAAeC,OAAOF,EAAMJ,KAAK,IACjCO,EAAQP,KAAUA,KAAQK,IAAiBA,EASjD,OAPAF,EAAII,GAAS,CACXC,KAAMJ,EAAMA,MAAMK,KAClBC,QAASN,EAAMA,MAAMM,SAGvBb,EAAiBO,EAAMA,MAAOD,EAAKI,GAE5BJ,GACNJ,GAGQY,EACVC,GAAWC,MAAOC,EAAQC,EAAGC,KAC5B,IACE,MAAO,CACLf,OAAQ,GACRa,aAAcF,EAAOE,IAEvB,MAAOV,GACP,MAAO,CACLU,OAAQ,GACRb,OAAQgB,EAAYpB,EAAiBO,GAAQY,EAAQE"}