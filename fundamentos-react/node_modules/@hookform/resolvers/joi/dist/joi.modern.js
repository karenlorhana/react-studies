import{appendErrors as e}from"react-hook-form";import{toNestError as r}from"@hookform/resolvers";const t=(t,o={abortEarly:!1},a={})=>async(s,c,l)=>{const i=Object.assign({},o,{context:c});let n={};if("sync"===a.mode)n=t.validate(s,i);else try{n.value=await t.validateAsync(s,i)}catch(e){n.error=e}return{values:n.error?{}:n.value,errors:n.error?r((m=n.error,y="all"===l.criteriaMode,m.details.length?m.details.reduce((r,t)=>{const o=t.path.join(".");if(r[o]||(r[o]={message:t.message,type:t.type}),y){const a=r[o].types,s=a&&a[t.type];r[o]=e(o,y,r,t.type,s?[].concat(s,t.message):t.message)}return r},{}):{}),l.fields):{}};var m,y};export{t as joiResolver};
//# sourceMappingURL=joi.modern.js.map
